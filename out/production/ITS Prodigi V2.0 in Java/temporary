
Variabili:
1. `nome`: Il nome dello studente.
2. `cognome`: Il cognome dello studente.
3. `numeroTelefono`: Il numero di telefono dello studente.
4. `corsoStudente`: Il corso di studio a cui lo studente è iscritto.
5. `idStudente`: L'ID univoco dello studente.
6. `password`: La password dello studente.
7. `trimestre`: Il trimestre in cui lo studente è iscritto (compreso tra 1 e 4).
8. `età`: L'età dello studente.
9. `insegnamentiIscritti`: Un HashMap che mantiene gli insegnamenti a cui lo studente è iscritto con i rispettivi voti.
Metodi:
1. `Studente(String idStudente, String password, int trimestre, String nome, String cognome, String corsoStudente, String numeroTelefono, int età)`: Costruttore della classe `Studente`. Crea un nuovo oggetto `Studente` con i dati forniti.
2. `getIdStudente()`: Restituisce l'ID dello studente.
3. `setIdStudente(String idStudente)`: Imposta un nuovo ID per lo studente.
4. `aggiorniIdStudente()`: Consente all'utente di aggiornare l'ID dello studente verificando che sia univoco.
5. `getPassword()`: Restituisce la password dello studente.
6. `setPassword(String password)`: Imposta una nuova password per lo studente.
7. `aggiorniPassword()`: Consente all'utente di aggiornare la password dello studente in modo interattivo.
8. `getTrimestre()`: Restituisce il trimestre attuale dello studente.
9. `setTrimestre(int trimestre)`: Imposta un nuovo trimestre per lo studente.
10. `aggiorniTrimestre()`: Consente all'utente di aggiornare il trimestre dello studente, ritirando gli insegnamenti attuali se necessario.
11. `getNome()`: Restituisce il nome dello studente.
12. `setNome(String nome)`: Imposta un nuovo nome per lo studente.
13. `getCognome()`: Restituisce il cognome dello studente.
14. `setCognome(String cognome)`: Imposta un nuovo cognome per lo studente.
15. `getNumeroTelefono()`: Restituisce il numero di telefono dello studente.
16. `setNumeroTelefono(String numeroTelefono)`: Imposta un nuovo numero di telefono per lo studente.
17. `getCorsoStudente()`: Restituisce il corso di studio a cui lo studente è iscritto.
18. `setCorsoStudente(String corsoStudente)`: Imposta un nuovo corso di studio per lo studente.
19. `getEtà()`: Restituisce l'età dello studente.
20. `setEtà(int età)`: Imposta una nuova età per lo studente.
21. `getInsegnamentiRegistrati()`: Restituisce un elenco degli insegnamenti a cui lo studente è iscritto con i voti associati.
22. `aggiungiInsegnamento(Insegnamento insegnamento, double voto)`: Aggiunge uno specifico insegnamento all'elenco degli insegnamenti a cui lo studente è iscritto con un voto associato.
23. `rimuoviInsegnamento(Insegnamento insegnamento)`: Rimuove uno specifico insegnamento dalEcco una lista dei metodi della classe `Studente` insieme alle loro descrizioni:
1. `getPassword()`: Restituisce la password dell'oggetto Studente.
2. `setPassword(String password)`: Imposta una nuova password per l'oggetto Studente.
3. `aggiorniPassword()`: Consente all'utente di aggiornare la password dell'oggetto Studente in modo interattivo. L'utente può inserire una nuova password o digitare "-1" per annullare l'operazione. Una volta inserita una nuova password valida, questa verrà impostata per l'oggetto Studente e confermata.
4. `getTrimestre()`: Restituisce il trimestre attuale dello studente.
5. `setTrimestre(int trimestre)`: Imposta un nuovo valore per il trimestre dello studente.
6. `aggiorniTrimestre()`: Consente all'utente di aggiornare il trimestre dello studente in modo interattivo. Questa operazione comporterà il ritiro da tutti gli insegnamenti attuali. L'utente inserisce un nuovo valore per il trimestre e, se il valore è nell'intervallo [1, 4], il trimestre viene aggiornato e tutti gli insegnamenti attualmente registrati vengono ritirati e cancellati. Se l'utente digita "-1", l'operazione viene annullata senza apportare modifiche.
7. `getNome()`: Restituisce il nome dello studente.l'elenco degli insegnamenti a cui lo studente è iscritto.
Ecco ulteriori metodi della classe `Studente` insieme alle loro descrizioni:
1. `setNome(String nome)`: Imposta un nuovo valore per il nome dello studente.
2. `aggiorniNome()`: Consente all'utente di aggiornare il nome dello studente in modo interattivo. L'utente può inserire un nuovo nome o digitare "-1" per annullare l'operazione. Una volta inserito un nuovo nome valido, questo verrà impostato per l'oggetto Studente e confermato.
3. `getCognome()`: Restituisce il cognome dello studente.
4. `setCognome(String cognome)`: Imposta un nuovo valore per il cognome dello studente.
5. `aggiorniCognome()`: Consente all'utente di aggiornare il cognome dello studente in modo interattivo. L'utente può inserire un nuovo cognome o digitare "-1" per annullare l'operazione. Una volta inserito un nuovo cognome valido, questo verrà impostato per l'oggetto Studente e confermato.
6. `getCorso()`: Restituisce il corso a cui lo studente è iscritto.
7. `setCorso(String corsoStudente)`: Imposta un nuovo corso per lo studente.
8. `aggiorniCorsoStudente()`: Consente all'utente di aggiornare il corso a cui lo studente è iscritto in modo interattivo. L'utente può inserire un nuovo corso o digitare "-1" per annullare l'operazione. Una volta inserito un nuovo corso valido, questo verrà impostato per l'oggetto Studente e confermato.
9. `getNumeroTelefono()`: Restituisce il numero di telefono dello studente.
10. `setNumeroTelefono(String numeroTelefono)`: Imposta un nuovo numero di telefono per lo studente.
1. `aggiorniNumeroTelefono()`: Consente all'utente di aggiornare il numero di telefono dello studente in modo interattivo. L'utente può inserire un nuovo numero di telefono o digitare "-1" per annullare l'operazione. Una volta inserito un nuovo numero di telefono valido, questo verrà impostato per l'oggetto Studente e confermato.
2. `getEtà()`: Restituisce l'età dello studente.
3. `setEtà(int età)`: Imposta una nuova età per lo studente.
4. `aggiorniEtà()`: Consente all'utente di aggiornare l'età dello studente in modo interattivo. L'utente può inserire una nuova età o digitare "-1" per annullare l'operazione. Una volta inserita una nuova età valida (maggiore o uguale a -1), questo verrà impostato per l'oggetto Studente e confermato.
5. `modifichiStudente()`: Consente all'utente di effettuare diverse operazioni di aggiornamento sui dati dello studente. Visualizza un menu con diverse opzioni di aggiornamento disponibili, richiede all'utente di selezionare un'opzione e utilizza metodi specifici per eseguire l'aggiornamento dei vari campi, come l'ID studente, la password, il trimestre, il nome, il cognome, il corso, il numero di telefono, l'età e gli insegnamenti dello studente. L'utente ha la possibilità di effettuare ulteriori modifiche o tornare indietro dopo ogni aggiornamento.

23. `getInsegnamentiIscriti()`: Restituisce una lista degli insegnamenti a cui lo studente è attualmente iscritto.
24. `setInsegnamentiIscritti(HashMap&lt;Insegnamento, Double&gt; insegnamentiIscritti)`: Imposta gli insegnamenti a cui lo studente è iscritto utilizzando una mappa che associa gli insegnamenti agli eventuali voti ottenuti.
25. `getInsegnamentiDisponibili()`: Restituisce una lista degli insegnamenti disponibili per lo studente. Gli insegnamenti disponibili sono quelli che appartengono al trimestre attuale dello studente e a cui lo studente non è già iscritto. Restituisce `null` se non ci sono insegnamenti disponibili.
26. `aggiorniInsegnamentoStudente()`: Consente all'utente di aggiornare gli insegnamenti dello studente. Questa operazione offre diverse opzioni, tra cui l'iscrizione a un insegnamento, il ritiro da un insegnamento, l'aggiornamento del voto in un insegnamento o il ritorno al menu precedente.
27. `iscrivitiAInsegnamento(Insegnamento insegnamento, boolean admin)`: Consente allo studente di iscriversi a un insegnamento specifico. Richiede l'insegnamento a cui lo studente vuole iscriversi e un flag che indica se l'utente che sta eseguendo l'operazione è un amministratore. Se l'utente è un amministratore, può anche inserire il voto dello studente. La funzione registra lo studente nell'insegnamento e imposta il voto se specificato.
Questi metodi aggiungono funzionalità per gestire gli insegnamenti a cui lo studente è iscritto, inclusa la possibilità di iscriversi a nuovi insegnamenti, ritirarsi da insegnamenti esistenti e aggiornare i voti negli insegnamenti.### Metodi
28. `ritiratiDaInsegnamento(Insegnamento insegnamento, boolean flag)`: Questo metodo consente allo studente di ritirarsi da un insegnamento specificato. Prende come argomenti l'insegnamento da cui lo studente vuole ritirarsi e un flag che indica se è necessario mostrare un messaggio di successo. Rimuove lo studente dall'insegnamento e notifica l'insegnamento dell'avvenuto ritiro. Se il flag è impostato su `true`, viene visualizzato un messaggio di successo.
29. `ritiratiDaTuttiInsegnamenti()`: Questo metodo consente allo studente di ritirarsi da tutti gli insegnamenti a cui è attualmente iscritto. Rimuove lo studente da tutti gli insegnamenti registrati e notifica ciascun insegnamento dell'avvenuto ritiro.
30. `getVoto(Insegnamento insegnamento)`: Restituisce il voto dello studente per un insegnamento specifico.
31. `setVoto(Insegnamento insegnamento, double voto)`: Imposta il voto dello studente per un insegnamento specifico.
32. `aggiorniInsegnamentoTrimestre(Insegnamento insegnamento)`: Consente all'utente di aggiornare il voto dello studente per un insegnamento. Se il nuovo voto è valido, sostituisce il voto precedente con il nuovo valore.
33. `calcoliMedia()`: Calcola la media dei voti dello studente in tutti gli insegnamenti a cui è iscritto. Restituisce la media dei voti in percentuale.
34. `stampiStudenteInsegnamenti(ArrayList&lt;Insegnamento&gt; insegnamenti)`: Stampa l'elenco degli insegnamenti a cui lo studente è iscritto con dettagli come ID insegnamento, nome insegnamento, trimestre, voto dello studente e voto in percentuale.
35. `stampiResocontoCompleto()`: Stampa un resoconto completo dello studente, inclusi dettagli come ID studente, numero di trimestri, nome, cognome, corso, numero di telefono, età e una lista degli insegnamenti a cui è iscritto con i relativi voti e la media (se ci sono insegnamenti iscritti).
Questi metodi aggiungono funzionalità per gestire gli insegnamenti a cui lo studente è iscritto, inclusa la possibilità di ritirarsi da insegnamenti, impostare i voti, calcolare la media dei voti e stampare i dettagli degli insegnamenti e del resoconto completo dello studente.